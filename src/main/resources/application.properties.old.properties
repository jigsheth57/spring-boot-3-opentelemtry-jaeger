#opentracing.jaeger.udp-sender.host=127.0.0.1
#opentracing.jaeger.udp-sender.port=6831
#opentracing.jaeger.service-name="OpenTracingAppA"
#opentracing.jaeger.enabled=TRUE
#opentracing.jaeger.http-sender.url= http://127.0.0.1:14268/api/traces

# management.endpoint.health.group.liveness.include=livenessstate,cacheCheck
# management.endpoint.health.probes.enabled=true
# management.otlp.metrics.export.enabled=false
# logging.level.org.springframework.web=INFO
management.endpoints.web.exposure.include=*

logging.level.ROOT=DEBUG
logging.level.io.opentelemetry.exporter.internal.grpc=DEBUG
spring.application.name=sample-spring-boot
management.tracing.sampling.probability=1.0
# tracing.url=http://jaeger.apps.internal:4317
# management.otlp.tracing.endpoint=http://jaeger.apps.internal:4317
# management.otlp.tracing.transport=grpc
# otel.javaagent.enabled=true
otel.sdk.enabled=true
otel.service.name=${spring.application.name}
otel.traces.exporter=otlp
otel.traces.sampler=alwaysonsampler
otel.exporter.otlp.protocol=grpc
otel.exporter.otlp.endpoint=https://jaeger-grpc.apps.dhaka.cf-app.com
otel.experimental.exporter.otlp.retry.enabled=true
otel.resource.attributes.service.name=${spring.application.name}
# Generic OpenTelemetry configuration (partially shared between metrics and traces)
# opentelemetry.resource-attributes.application=${spring.application.name}
# opentelemetry.resource-attributes.cluster=local
# Traces-specific OpenTelemetry configuration
# otlp.tracing.endpoint=http://jaeger.apps.internal:4317
# otlp.tracing.endpoint=https://jaeger-grpc.apps.dhaka.cf-app.com
# otel.exporter.otlp.protocol=grpc
# otel.exporter.otlp.endpoint=https://jaeger-grpc.apps.dhaka.cf-app.com
